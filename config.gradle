// todo 这里是给所有子模块配置，包括 module_、lib_、api_
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
// 该插件已经被废弃，项目中也禁止再使用直接通过 id 来获取 view
apply plugin: 'kotlin-android-extensions'

interface Func {
    void func()
}

void setModule(Func closure) {
    if (project.name.matches("module_.+")) closure.func()
}

void setLib(Func closure) {
    if (project.name.matches("lib.+")) closure.func()
}

void setApi(Func closure) {
    if (project.name.matches("api_.+")) closure.func()
}

if (project.name == "module_app") {
    apply plugin: 'com.android.application'
} else {
    if (isSingleModuleDebug.toBoolean()) {
        apply plugin: 'com.android.application'
    } else {
        apply plugin: 'com.android.library'
    }
}

android {
    compileSdkVersion build_versions.target_sdk

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        // 添加以下两句代码，这是 photolibrary 需要设置的东西
        renderscriptTargetApi build_versions.target_sdk  //版本号请与compileSdkVersion保持一致
        renderscriptSupportModeEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            // ARouter https://github.com/alibaba/ARouter
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

        // 秘钥文件
        manifestPlaceholders = secret.manifestPlaceholders
        secret.buildConfigField.forEach({ k, v ->
            buildConfigField("String", k, v)
        })
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    setModule {
        buildFeatures {
            dataBinding true
        }
        sourceSets {
            main {
                //debug时能独立执行Main模块的配置
                if (isSingleModuleDebug.toBoolean()) {
                    manifest.srcFile 'src/main/module/AndroidManifest.xml'
                } else {
                    manifest.srcFile 'src/main/AndroidManifest.xml'
                    java {
                        exclude 'debug/**'
                    }
                }
            }
        }
    }

    setLib {
        buildFeatures {
            dataBinding true
        }
    }
}

dependencies {
    /*
    * todo
    *  1、这里是给所有子模块配置依赖，包括 module_、lib_、api_
    *  2、如果只有你自己的模块需要单独的依赖，请添加到你自己模块的 build.gradle.kts 中
    *  3、如果以后引入一些特殊的依赖，比如：bugly 这种，只需要给 module_app 单独添加即可
    * */

    // androidX 基础库
    implementation 'androidx.appcompat:appcompat:1.4.0'

    // ARouter https://github.com/alibaba/ARouter
    implementation "com.alibaba:arouter-api:1.5.2"
    kapt 'com.alibaba:arouter-compiler:1.5.2'
    // 上线之前如果需要检测是否有内存泄漏，直接解除注释，然后安装debug版本的掌邮
    // 就会附带一个LeakCanary的app来检测是否有内存泄漏
//        debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    // https://github.com/whataa/pandora
    // 开发测试工具，如果需要解除注释
//        debugImplementation 'com.github.whataa:pandora:androidx_v2.1.0'
//        debugImplementation 'com.github.whataa:pandora-no-op:v2.1.0'

    implementation 'com.github.limuyang2:LPhotoPicker:2.6'


}

setModule {
    println "module"
    // todo 这里是给 module_ 配置依赖
    apply from: "$rootDir/dependencies.gradle"



    // 似乎是一个选择本地图片的第三方库
//        implementation project(path: ':photolibrary-2.5')
}

setLib {
    // todo 这里是给 lib_ 配置依赖
    apply from: "$rootDir/dependencies.gradle"
}

setApi{
    //implementation "com.alibaba:arouter-api:1.5.2"
}